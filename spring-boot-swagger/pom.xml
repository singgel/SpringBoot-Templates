<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>com.hks.example</groupId>
    <artifactId>spring-boot-swagger</artifactId>
    <packaging>jar</packaging>

    <version>1.0-SNAPSHOT</version>
    <name>spring-boot-swagger</name>

    <parent>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-starter-parent</artifactId>
        <version>1.5.7.RELEASE</version>
        <relativePath/>
    </parent>

    <properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
        <java.version>1.8</java.version>
    </properties>

    <dependencies>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-web</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-actuator</artifactId>
        </dependency>
        <!--<dependency>
            <groupId>org.jolokia</groupId>
            <artifactId>jolokia-core</artifactId>
            <version>1.6.2</version>
        </dependency>-->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-test</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>io.springfox</groupId>
            <artifactId>springfox-swagger2</artifactId>
            <version>2.7.0</version>
        </dependency>
        <dependency>
            <groupId>io.springfox</groupId>
            <artifactId>springfox-swagger-ui</artifactId>
            <version>2.7.0</version>
        </dependency>
        <dependency>
            <groupId>com.alibaba</groupId>
            <artifactId>fastjson</artifactId>
            <version>1.2.83</version>
        </dependency>
    </dependencies>


    <build>

        <resources>
            <resource>
                <directory>${basedir}/src/main/resources</directory>
                <filtering>true</filtering>
                <includes>
                    <include>**/*</include>
                </includes>
            </resource>
        </resources>

        <plugins>
            <plugin>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
                <configuration>
                    <skip>true</skip>
                    <testFailureIgnore>true</testFailureIgnore>
                </configuration>
            </plugin>


            <!--
             手动执行 mvn compile 即可生成 swagger.yaml 文件

             此插件 生成的   swagger.yaml 文件内容

               "parameters": [
                            {
                                "name": "",

                        name 为空，影响 swagger2markup-maven-plugin 生成MARKDOWN 文档，等待 开源作者解决

            解决方法：
            在浏览器：http://127.0.0.1:8080/v2/api-docs  生成  swagger.yaml 文件内容

             -->

            <!--
               手动执行 mvn compile 即可生成 swagger.yaml 文件
            -->

            <!--
             <plugin>
                <groupId>com.github.kongchen</groupId>
                <artifactId>swagger-maven-plugin</artifactId>
                <version>3.1.5</version>
                <configuration>
                    <apiSources>
                        <apiSource>
                            <springmvc>true</springmvc>
                            <locations>
                                <location>com.hks.swagger.controller</location>
                            </locations>
                            <schemes>
                                <scheme>http</scheme>
                            </schemes>
                            <info>
                                <title>Spring Boot 中使用 Swagger2构建 RESTful API 文档</title>
                                <version>V1</version>
                                <description>更多 Spring Boot 相关文章 https://blog.csdn.net/singgel/</description>
                                <termsOfService>https://blog.csdn.net/singgel/</termsOfService>
                            </info>

                            <swaggerDirectory>${basedir}/src/main/resources/static/swagger/</swaggerDirectory>
                            <outputFormats>yaml</outputFormats>
                        </apiSource>
                    </apiSources>
                </configuration>
                <executions>
                    <execution>
                        <phase>compile</phase>
                        <goals>
                            <goal>generate</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>-->

            <plugin>
                <!--手动执行mvn swagger2markup:convertSwagger2markup即可生成markdown文档-->
                <groupId>io.github.swagger2markup</groupId>
                <artifactId>swagger2markup-maven-plugin</artifactId>
                <version>1.3.3</version>
                <configuration>

                    <swaggerInput>${basedir}/src/main/resources/static/swagger/swagger.yaml</swaggerInput>
                    <outputDir>${project.build.directory}/target</outputDir>
                    <outputFile>${project.build.directory}/target</outputFile>
                    <config>
                        <!--设置输出文件的语言：ASCIIDOC, MARKDOWN, CONFLUENCE_MARKUP-->
                        <swagger2markup.markupLanguage>MARKDOWN</swagger2markup.markupLanguage>
                        <!--设置目录的展现方式-->
                        <swagger2markup.pathsGroupedBy>TAGS</swagger2markup.pathsGroupedBy>
                    </config>
                </configuration>

            </plugin>
        </plugins>
    </build>


</project>